cutDownData <- subset(mergedData, select=c("Player", "GA.x", "SA.x", "GA.y", "SA.y", "Sv..x", "Sv..y"))
cutDownData$SvP.x <- cutDownData$Sv..x/100
cutDownData$SvP.y <- cutDownData$Sv..y/100
# Caulculate the shrinkage c for the JS Estimator
k <- nrow(cutDownData) # number of unknown means
p.bar <- 1 - mean(cutDownData$GA.x)/mean(cutDownData$SA.x) #total average of averages
p.hat <- cutDownData$SvP.x # Sample means, the MLEs
c <- 1 - (k-3)*(p.bar*(1 - p.bar)/cutDownData$SA.x)/sum((p.hat - p.bar)^2) # apply the shrinkage formula
meanSq <- function(x, y){sqrt(mean((x-y)^2))}
cutDownData$JS <- p.bar + c*(p.hat - p.bar) # create a column for JS estimates
cutDownData$SMMS <- mapply(meanSq,cutDownData$SvP.x, cutDownData$SvP.y)
cutDownData$JSMS <- mapply(meanSq,cutDownData$JS, cutDownData$SvP.y)
meanSq(cutDownData$SvP.x, cutDownData$SvP.y)
meanSq(cutDownData$JS, cutDownData$SvP.y)
meanSq(p.bar, cutDownData$SvP.y)
cutDown <- subset(cutDownData, select=c("Player", "SMMS", "JSMS"))
cutDown$Player <- sub(".*? (.+)", "\\1", cutDown$Player)
cutDown.long<-melt(cutDown)
ggplot(cutDown.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
scale_fill_manual(values=c("#E69F00", "#56B4E9"))
splitStats <- read.csv("GoalieSplit.csv")
seasonStats <- read.csv("GoalieSeason.csv")
gameStats <- read.csv("GamebyGame.csv")
# Keep only the players who have between 150-350 shots against in the first split,
# and played at least 50 games in the season
subSplit <- subset(splitStats, SA >= 150)
subSplit <- subset(subSplit, SA <= 200)
seasonSplit <- subset(seasonStats, GP >= 50)
# Merge the split and season data and remove unnecessary columns
mergedData <- merge(subSplit,seasonSplit, by = "Player")
cutDownData <- subset(mergedData, select=c("Player", "GA.x", "SA.x", "GA.y", "SA.y", "Sv..x", "Sv..y"))
cutDownData$SvP.x <- cutDownData$Sv..x/100
cutDownData$SvP.y <- cutDownData$Sv..y/100
# Caulculate the shrinkage c for the JS Estimator
k <- nrow(cutDownData) # number of unknown means
p.bar <- 1 - mean(cutDownData$GA.x)/mean(cutDownData$SA.x) #total average of averages
p.hat <- cutDownData$SvP.x # Sample means, the MLEs
c <- 1 - (k-3)*(p.bar*(1 - p.bar)/cutDownData$SA.x)/sum((p.hat - p.bar)^2) # apply the shrinkage formula
meanSq <- function(x, y){sqrt(mean((x-y)^2))}
cutDownData$JS <- p.bar + c*(p.hat - p.bar) # create a column for JS estimates
cutDownData$SMMS <- mapply(meanSq,cutDownData$SvP.x, cutDownData$SvP.y)
cutDownData$JSMS <- mapply(meanSq,cutDownData$JS, cutDownData$SvP.y)
meanSq(cutDownData$SvP.x, cutDownData$SvP.y)
meanSq(cutDownData$JS, cutDownData$SvP.y)
meanSq(p.bar, cutDownData$SvP.y)
cutDown <- subset(cutDownData, select=c("Player", "SMMS", "JSMS"))
cutDown$Player <- sub(".*? (.+)", "\\1", cutDown$Player)
cutDown.long<-melt(cutDown)
ggplot(cutDown.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
scale_fill_manual(values=c("#E69F00", "#56B4E9"))
# Keep only the players who have between 150-350 shots against in the first split,
# and played at least 50 games in the season
subSplit <- subset(splitStats, SA >= 150)
subSplit <- subset(subSplit, SA <= 200)
seasonSplit <- subset(seasonStats, GP >= 40)
# Merge the split and season data and remove unnecessary columns
mergedData <- merge(subSplit,seasonSplit, by = "Player")
cutDownData <- subset(mergedData, select=c("Player", "GA.x", "SA.x", "GA.y", "SA.y", "Sv..x", "Sv..y"))
cutDownData$SvP.x <- cutDownData$Sv..x/100
cutDownData$SvP.y <- cutDownData$Sv..y/100
# Caulculate the shrinkage c for the JS Estimator
k <- nrow(cutDownData) # number of unknown means
p.bar <- 1 - mean(cutDownData$GA.x)/mean(cutDownData$SA.x) #total average of averages
p.hat <- cutDownData$SvP.x # Sample means, the MLEs
c <- 1 - (k-3)*(p.bar*(1 - p.bar)/cutDownData$SA.x)/sum((p.hat - p.bar)^2) # apply the shrinkage formula
meanSq <- function(x, y){sqrt(mean((x-y)^2))}
cutDownData$JS <- p.bar + c*(p.hat - p.bar) # create a column for JS estimates
cutDownData$SMMS <- mapply(meanSq,cutDownData$SvP.x, cutDownData$SvP.y)
cutDownData$JSMS <- mapply(meanSq,cutDownData$JS, cutDownData$SvP.y)
meanSq(cutDownData$SvP.x, cutDownData$SvP.y)
meanSq(cutDownData$JS, cutDownData$SvP.y)
meanSq(p.bar, cutDownData$SvP.y)
cutDown <- subset(cutDownData, select=c("Player", "SMMS", "JSMS"))
cutDown$Player <- sub(".*? (.+)", "\\1", cutDown$Player)
cutDown.long<-melt(cutDown)
ggplot(cutDown.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
scale_fill_manual(values=c("#E69F00", "#56B4E9"))
cutDownSP <- subset(cutDownData, select=c("Player", "JS", "SvP.x", "SvP.y"))
SPplot <- cutDownSP > gather(key, value, -Player)
ggplot(SPplot, mapping = aes(x = Player, y = value, color = key)) + geom_line()
# Keep only the players who have between 150-350 shots against in the first split,
# and played at least 50 games in the season
subSplit <- subset(splitStats, SA >= 200)
subSplit <- subset(subSplit, SA <= 250)
seasonSplit <- subset(seasonStats, GP >= 50)
# Merge the split and season data and remove unnecessary columns
mergedData <- merge(subSplit,seasonSplit, by = "Player")
cutDownData <- subset(mergedData, select=c("Player", "GA.x", "SA.x", "GA.y", "SA.y", "Sv..x", "Sv..y"))
cutDownData$SvP.x <- cutDownData$Sv..x/100
cutDownData$SvP.y <- cutDownData$Sv..y/100
# Caulculate the shrinkage c for the JS Estimator
k <- nrow(cutDownData) # number of unknown means
p.bar <- 1 - mean(cutDownData$GA.x)/mean(cutDownData$SA.x) #total average of averages
p.hat <- cutDownData$SvP.x # Sample means, the MLEs
c <- 1 - (k-3)*(p.bar*(1 - p.bar)/cutDownData$SA.x)/sum((p.hat - p.bar)^2) # apply the shrinkage formula
meanSq <- function(x, y){sqrt(mean((x-y)^2))}
cutDownData$JS <- p.bar + c*(p.hat - p.bar) # create a column for JS estimates
cutDownData$SMMS <- mapply(meanSq,cutDownData$SvP.x, cutDownData$SvP.y)
cutDownData$JSMS <- mapply(meanSq,cutDownData$JS, cutDownData$SvP.y)
meanSq(cutDownData$SvP.x, cutDownData$SvP.y)
meanSq(cutDownData$JS, cutDownData$SvP.y)
meanSq(p.bar, cutDownData$SvP.y)
cutDown <- subset(cutDownData, select=c("Player", "SMMS", "JSMS"))
cutDown$Player <- sub(".*? (.+)", "\\1", cutDown$Player)
cutDown.long<-melt(cutDown)
ggplot(cutDown.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
scale_fill_manual(values=c("#E69F00", "#56B4E9"))
# Keep only the players who have between 150-350 shots against in the first split,
# and played at least 50 games in the season
subSplit <- subset(splitStats, SA >= 200)
subSplit <- subset(subSplit, SA <= 300)
seasonSplit <- subset(seasonStats, GP >= 50)
# Merge the split and season data and remove unnecessary columns
mergedData <- merge(subSplit,seasonSplit, by = "Player")
cutDownData <- subset(mergedData, select=c("Player", "GA.x", "SA.x", "GA.y", "SA.y", "Sv..x", "Sv..y"))
cutDownData$SvP.x <- cutDownData$Sv..x/100
cutDownData$SvP.y <- cutDownData$Sv..y/100
# Caulculate the shrinkage c for the JS Estimator
k <- nrow(cutDownData) # number of unknown means
p.bar <- 1 - mean(cutDownData$GA.x)/mean(cutDownData$SA.x) #total average of averages
p.hat <- cutDownData$SvP.x # Sample means, the MLEs
c <- 1 - (k-3)*(p.bar*(1 - p.bar)/cutDownData$SA.x)/sum((p.hat - p.bar)^2) # apply the shrinkage formula
meanSq <- function(x, y){sqrt(mean((x-y)^2))}
cutDownData$JS <- p.bar + c*(p.hat - p.bar) # create a column for JS estimates
cutDownData$SMMS <- mapply(meanSq,cutDownData$SvP.x, cutDownData$SvP.y)
cutDownData$JSMS <- mapply(meanSq,cutDownData$JS, cutDownData$SvP.y)
meanSq(cutDownData$SvP.x, cutDownData$SvP.y)
meanSq(cutDownData$JS, cutDownData$SvP.y)
meanSq(p.bar, cutDownData$SvP.y)
cutDown <- subset(cutDownData, select=c("Player", "SMMS", "JSMS"))
cutDown$Player <- sub(".*? (.+)", "\\1", cutDown$Player)
cutDown.long<-melt(cutDown)
ggplot(cutDown.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
scale_fill_manual(values=c("#E69F00", "#56B4E9"))
# Keep only the players who have between 150-350 shots against in the first split,
# and played at least 50 games in the season
subSplit <- subset(splitStats, SA >= 150)
subSplit <- subset(subSplit, SA <= 300)
seasonSplit <- subset(seasonStats, GP >= 50)
# Merge the split and season data and remove unnecessary columns
mergedData <- merge(subSplit,seasonSplit, by = "Player")
cutDownData <- subset(mergedData, select=c("Player", "GA.x", "SA.x", "GA.y", "SA.y", "Sv..x", "Sv..y"))
cutDownData$SvP.x <- cutDownData$Sv..x/100
cutDownData$SvP.y <- cutDownData$Sv..y/100
# Caulculate the shrinkage c for the JS Estimator
k <- nrow(cutDownData) # number of unknown means
p.bar <- 1 - mean(cutDownData$GA.x)/mean(cutDownData$SA.x) #total average of averages
p.hat <- cutDownData$SvP.x # Sample means, the MLEs
c <- 1 - (k-3)*(p.bar*(1 - p.bar)/cutDownData$SA.x)/sum((p.hat - p.bar)^2) # apply the shrinkage formula
meanSq <- function(x, y){sqrt(mean((x-y)^2))}
cutDownData$JS <- p.bar + c*(p.hat - p.bar) # create a column for JS estimates
cutDownData$SMMS <- mapply(meanSq,cutDownData$SvP.x, cutDownData$SvP.y)
cutDownData$JSMS <- mapply(meanSq,cutDownData$JS, cutDownData$SvP.y)
meanSq(cutDownData$SvP.x, cutDownData$SvP.y)
meanSq(cutDownData$JS, cutDownData$SvP.y)
meanSq(p.bar, cutDownData$SvP.y)
cutDown <- subset(cutDownData, select=c("Player", "SMMS", "JSMS"))
cutDown$Player <- sub(".*? (.+)", "\\1", cutDown$Player)
cutDown.long<-melt(cutDown)
ggplot(cutDown.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
scale_fill_manual(values=c("#E69F00", "#56B4E9"))
splitStats <- read.csv("GoalieSplit.csv")
seasonStats <- read.csv("GoalieSeason.csv")
gameStats <- read.csv("GamebyGame.csv")
# Keep only the players who have between 150-350 shots against in the first split,
# and played at least 50 games in the season
subSplit <- subset(splitStats, SA >= 150)
subSplit <- subset(subSplit, SA <= 350)
seasonSplit <- subset(seasonStats, GP >= 50)
# Merge the split and season data and remove unnecessary columns
mergedData <- merge(subSplit,seasonSplit, by = "Player")
cutDownData <- subset(mergedData, select=c("Player", "GA.x", "SA.x", "GA.y", "SA.y", "Sv..x", "Sv..y"))
cutDownData$SvP.x <- cutDownData$Sv..x/100
cutDownData$SvP.y <- cutDownData$Sv..y/100
# Caulculate the shrinkage c for the JS Estimator
k <- nrow(cutDownData) # number of unknown means
p.bar <- 1 - mean(cutDownData$GA.x)/mean(cutDownData$SA.x) #total average of averages
p.hat <- cutDownData$SvP.x # Sample means, the MLEs
c <- 1 - (k-3)*(p.bar*(1 - p.bar)/cutDownData$SA.x)/sum((p.hat - p.bar)^2) # apply the shrinkage formula
meanSq <- function(x, y){sqrt(mean((x-y)^2))}
cutDownData$JS <- p.bar + c*(p.hat - p.bar) # create a column for JS estimates
cutDownData$SMMS <- mapply(meanSq,cutDownData$SvP.x, cutDownData$SvP.y)
cutDownData$JSMS <- mapply(meanSq,cutDownData$JS, cutDownData$SvP.y)
meanSq(cutDownData$SvP.x, cutDownData$SvP.y)
meanSq(cutDownData$JS, cutDownData$SvP.y)
meanSq(p.bar, cutDownData$SvP.y)
cutDown <- subset(cutDownData, select=c("Player", "SMMS", "JSMS"))
cutDown$Player <- sub(".*? (.+)", "\\1", cutDown$Player)
cutDown.long<-melt(cutDown)
ggplot(cutDown.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
scale_fill_manual(values=c("#E69F00", "#56B4E9"))
cutDownSP <- subset(cutDownData, select=c("Player", "JS", "SvP.x", "SvP.y"))
SPplot <- cutDownSP > gather(key, value, -Player)
ggplot(SPplot, mapping = aes(x = Player, y = value, color = key)) + geom_line()
# Keep only the players who have between 150-350 shots against in the first split,
# and played at least 50 games in the season
subSplit <- subset(splitStats, SA >= 150)
subSplit <- subset(subSplit, SA <= 400)
seasonSplit <- subset(seasonStats, GP >= 50)
# Merge the split and season data and remove unnecessary columns
mergedData <- merge(subSplit,seasonSplit, by = "Player")
cutDownData <- subset(mergedData, select=c("Player", "GA.x", "SA.x", "GA.y", "SA.y", "Sv..x", "Sv..y"))
cutDownData$SvP.x <- cutDownData$Sv..x/100
cutDownData$SvP.y <- cutDownData$Sv..y/100
# Caulculate the shrinkage c for the JS Estimator
k <- nrow(cutDownData) # number of unknown means
p.bar <- 1 - mean(cutDownData$GA.x)/mean(cutDownData$SA.x) #total average of averages
p.hat <- cutDownData$SvP.x # Sample means, the MLEs
c <- 1 - (k-3)*(p.bar*(1 - p.bar)/cutDownData$SA.x)/sum((p.hat - p.bar)^2) # apply the shrinkage formula
# Calculate our MSE values for JS Estimator and the MLE (SvP.x)
meanSq <- function(x, y){sqrt(mean((x-y)^2))}
cutDownData$JS <- p.bar + c*(p.hat - p.bar) # create a column for JS estimates
cutDownData$SMMS <- mapply(meanSq,cutDownData$SvP.x, cutDownData$SvP.y)
cutDownData$JSMS <- mapply(meanSq,cutDownData$JS, cutDownData$SvP.y)
meanSq(cutDownData$SvP.x, cutDownData$SvP.y) ## total MLE MSE
meanSq(cutDownData$JS, cutDownData$SvP.y) ## total JS MSE
cutDown <- subset(cutDownData, select=c("Player", "SMMS", "JSMS"))
# Keep only the players who have between 150-350 shots against in the first split,
# and played at least 50 games in the season
subSplit <- subset(splitStats, SA >= 100)
subSplit <- subset(subSplit, SA <= 400)
seasonSplit <- subset(seasonStats, GP >= 50)
# Merge the split and season data and remove unnecessary columns
mergedData <- merge(subSplit,seasonSplit, by = "Player")
cutDownData <- subset(mergedData, select=c("Player", "GA.x", "SA.x", "GA.y", "SA.y", "Sv..x", "Sv..y"))
cutDownData$SvP.x <- cutDownData$Sv..x/100
cutDownData$SvP.y <- cutDownData$Sv..y/100
# Caulculate the shrinkage c for the JS Estimator
k <- nrow(cutDownData) # number of unknown means
p.bar <- 1 - mean(cutDownData$GA.x)/mean(cutDownData$SA.x) #total average of averages
p.hat <- cutDownData$SvP.x # Sample means, the MLEs
c <- 1 - (k-3)*(p.bar*(1 - p.bar)/cutDownData$SA.x)/sum((p.hat - p.bar)^2) # apply the shrinkage formula
# Calculate our MSE values for JS Estimator and the MLE (SvP.x)
meanSq <- function(x, y){sqrt(mean((x-y)^2))}
cutDownData$JS <- p.bar + c*(p.hat - p.bar) # create a column for JS estimates
cutDownData$SMMS <- mapply(meanSq,cutDownData$SvP.x, cutDownData$SvP.y)
cutDownData$JSMS <- mapply(meanSq,cutDownData$JS, cutDownData$SvP.y)
meanSq(cutDownData$SvP.x, cutDownData$SvP.y) ## total MLE MSE
meanSq(cutDownData$JS, cutDownData$SvP.y) ## total JS MSE
cutDown <- subset(cutDownData, select=c("Player", "SMMS", "JSMS"))
meanSq(p.bar, cutDownData$SvP.y)
# Keep only the players who have between 150-350 shots against in the first split,
# and played at least 50 games in the season
subSplit <- subset(splitStats, SA >= 100)
subSplit <- subset(subSplit, SA <= 400)
seasonSplit <- subset(seasonStats, GP >= 40)
# Merge the split and season data and remove unnecessary columns
mergedData <- merge(subSplit,seasonSplit, by = "Player")
cutDownData <- subset(mergedData, select=c("Player", "GA.x", "SA.x", "GA.y", "SA.y", "Sv..x", "Sv..y"))
cutDownData$SvP.x <- cutDownData$Sv..x/100
cutDownData$SvP.y <- cutDownData$Sv..y/100
# Caulculate the shrinkage c for the JS Estimator
k <- nrow(cutDownData) # number of unknown means
p.bar <- 1 - mean(cutDownData$GA.x)/mean(cutDownData$SA.x) #total average of averages
p.hat <- cutDownData$SvP.x # Sample means, the MLEs
c <- 1 - (k-3)*(p.bar*(1 - p.bar)/cutDownData$SA.x)/sum((p.hat - p.bar)^2) # apply the shrinkage formula
# Calculate our MSE values for JS Estimator and the MLE (SvP.x)
meanSq <- function(x, y){sqrt(mean((x-y)^2))}
cutDownData$JS <- p.bar + c*(p.hat - p.bar) # create a column for JS estimates
cutDownData$SMMS <- mapply(meanSq,cutDownData$SvP.x, cutDownData$SvP.y)
cutDownData$JSMS <- mapply(meanSq,cutDownData$JS, cutDownData$SvP.y)
meanSq(cutDownData$SvP.x, cutDownData$SvP.y) ## total MLE MSE
meanSq(cutDownData$JS, cutDownData$SvP.y) ## total JS MSE
meanSq(p.bar, cutDownData$SvP.y)
# Keep only the players who have between 150-350 shots against in the first split,
# and played at least 50 games in the season
subSplit <- subset(splitStats, SA >= 150)
subSplit <- subset(subSplit, SA <= 350)
seasonSplit <- subset(seasonStats, GP >= 60)
# Merge the split and season data and remove unnecessary columns
mergedData <- merge(subSplit,seasonSplit, by = "Player")
cutDownData <- subset(mergedData, select=c("Player", "GA.x", "SA.x", "GA.y", "SA.y", "Sv..x", "Sv..y"))
cutDownData$SvP.x <- cutDownData$Sv..x/100
cutDownData$SvP.y <- cutDownData$Sv..y/100
# Caulculate the shrinkage c for the JS Estimator
k <- nrow(cutDownData) # number of unknown means
p.bar <- 1 - mean(cutDownData$GA.x)/mean(cutDownData$SA.x) #total average of averages
p.hat <- cutDownData$SvP.x # Sample means, the MLEs
c <- 1 - (k-3)*(p.bar*(1 - p.bar)/cutDownData$SA.x)/sum((p.hat - p.bar)^2) # apply the shrinkage formula
# Calculate our MSE values for JS Estimator and the MLE (SvP.x)
meanSq <- function(x, y){sqrt(mean((x-y)^2))}
cutDownData$JS <- p.bar + c*(p.hat - p.bar) # create a column for JS estimates
cutDownData$SMMS <- mapply(meanSq,cutDownData$SvP.x, cutDownData$SvP.y)
cutDownData$JSMS <- mapply(meanSq,cutDownData$JS, cutDownData$SvP.y)
meanSq(cutDownData$SvP.x, cutDownData$SvP.y) ## total MLE MSE
meanSq(cutDownData$JS, cutDownData$SvP.y) ## total JS MSE
meanSq(p.bar, cutDownData$SvP.y)
# Keep only the players who have between 150-350 shots against in the first split,
# and played at least 50 games in the season
subSplit <- subset(splitStats, SA >= 150)
subSplit <- subset(subSplit, SA <= 350)
seasonSplit <- subset(seasonStats, GP >= 30)
# Merge the split and season data and remove unnecessary columns
mergedData <- merge(subSplit,seasonSplit, by = "Player")
cutDownData <- subset(mergedData, select=c("Player", "GA.x", "SA.x", "GA.y", "SA.y", "Sv..x", "Sv..y"))
cutDownData$SvP.x <- cutDownData$Sv..x/100
cutDownData$SvP.y <- cutDownData$Sv..y/100
# Caulculate the shrinkage c for the JS Estimator
k <- nrow(cutDownData) # number of unknown means
p.bar <- 1 - mean(cutDownData$GA.x)/mean(cutDownData$SA.x) #total average of averages
p.hat <- cutDownData$SvP.x # Sample means, the MLEs
c <- 1 - (k-3)*(p.bar*(1 - p.bar)/cutDownData$SA.x)/sum((p.hat - p.bar)^2) # apply the shrinkage formula
# Calculate our MSE values for JS Estimator and the MLE (SvP.x)
meanSq <- function(x, y){sqrt(mean((x-y)^2))}
cutDownData$JS <- p.bar + c*(p.hat - p.bar) # create a column for JS estimates
cutDownData$SMMS <- mapply(meanSq,cutDownData$SvP.x, cutDownData$SvP.y)
cutDownData$JSMS <- mapply(meanSq,cutDownData$JS, cutDownData$SvP.y)
meanSq(cutDownData$SvP.x, cutDownData$SvP.y) ## total MLE MSE
meanSq(cutDownData$JS, cutDownData$SvP.y) ## total JS MSE
meanSq(p.bar, cutDownData$SvP.y)
cutDown <- subset(cutDownData, select=c("Player", "SMMS", "JSMS"))
cutDown$Player <- sub(".*? (.+)", "\\1", cutDown$Player)
cutDown.long<-melt(cutDown)
ggplot(cutDown.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
scale_fill_manual(values=c("#E69F00", "#56B4E9"))
cutDownSP <- subset(cutDownData, select=c("Player", "JS", "SvP.x", "SvP.y"))
# Keep only the players who have between 150-350 shots against in the first split,
# and played at least 50 games in the season
subSplit <- subset(splitStats, SA >= 150)
subSplit <- subset(subSplit, SA <= 350)
seasonSplit <- subset(seasonStats, GP >= 45)
# Merge the split and season data and remove unnecessary columns
mergedData <- merge(subSplit,seasonSplit, by = "Player")
cutDownData <- subset(mergedData, select=c("Player", "GA.x", "SA.x", "GA.y", "SA.y", "Sv..x", "Sv..y"))
cutDownData$SvP.x <- cutDownData$Sv..x/100
cutDownData$SvP.y <- cutDownData$Sv..y/100
# Caulculate the shrinkage c for the JS Estimator
k <- nrow(cutDownData) # number of unknown means
p.bar <- 1 - mean(cutDownData$GA.x)/mean(cutDownData$SA.x) #total average of averages
p.hat <- cutDownData$SvP.x # Sample means, the MLEs
c <- 1 - (k-3)*(p.bar*(1 - p.bar)/cutDownData$SA.x)/sum((p.hat - p.bar)^2) # apply the shrinkage formula
# Calculate our MSE values for JS Estimator and the MLE (SvP.x)
meanSq <- function(x, y){sqrt(mean((x-y)^2))}
cutDownData$JS <- p.bar + c*(p.hat - p.bar) # create a column for JS estimates
cutDownData$SMMS <- mapply(meanSq,cutDownData$SvP.x, cutDownData$SvP.y)
cutDownData$JSMS <- mapply(meanSq,cutDownData$JS, cutDownData$SvP.y)
meanSq(cutDownData$SvP.x, cutDownData$SvP.y) ## total MLE MSE
meanSq(cutDownData$JS, cutDownData$SvP.y) ## total JS MSE
meanSq(p.bar, cutDownData$SvP.y)
# Keep only the players who have between 150-350 shots against in the first split,
# and played at least 50 games in the season
subSplit <- subset(splitStats, SA >= 150)
subSplit <- subset(subSplit, SA <= 350)
seasonSplit <- subset(seasonStats, GP >= 40)
# Merge the split and season data and remove unnecessary columns
mergedData <- merge(subSplit,seasonSplit, by = "Player")
cutDownData <- subset(mergedData, select=c("Player", "GA.x", "SA.x", "GA.y", "SA.y", "Sv..x", "Sv..y"))
cutDownData$SvP.x <- cutDownData$Sv..x/100
cutDownData$SvP.y <- cutDownData$Sv..y/100
# Caulculate the shrinkage c for the JS Estimator
k <- nrow(cutDownData) # number of unknown means
p.bar <- 1 - mean(cutDownData$GA.x)/mean(cutDownData$SA.x) #total average of averages
p.hat <- cutDownData$SvP.x # Sample means, the MLEs
c <- 1 - (k-3)*(p.bar*(1 - p.bar)/cutDownData$SA.x)/sum((p.hat - p.bar)^2) # apply the shrinkage formula
# Calculate our MSE values for JS Estimator and the MLE (SvP.x)
meanSq <- function(x, y){sqrt(mean((x-y)^2))}
cutDownData$JS <- p.bar + c*(p.hat - p.bar) # create a column for JS estimates
cutDownData$SMMS <- mapply(meanSq,cutDownData$SvP.x, cutDownData$SvP.y)
cutDownData$JSMS <- mapply(meanSq,cutDownData$JS, cutDownData$SvP.y)
meanSq(cutDownData$SvP.x, cutDownData$SvP.y) ## total MLE MSE
meanSq(cutDownData$JS, cutDownData$SvP.y) ## total JS MSE
meanSq(p.bar, cutDownData$SvP.y)
cutDownSP <- subset(cutDownData, select=c("Player", "JS", "SvP.x", "SvP.y"))
cutDownSP$Player <- sub(".*? (.+)", "\\1", cutDownSP$Player)
SPplot <- cutDownSP > gather(key, value, -Player)
ggplot(SPplot, mapping = aes(x = Player, y = value, color = key)) + geom_line()
cutDownSP <- subset(cutDownData, select=c("Player", "JS", "SvP.x", "SvP.y"))
cutDownSP$Player <- sub(".*? (.+)", "\\1", cutDownSP$Player)
cutDownSP.long<-melt(cutDownSP)
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0))
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
ylim(.85, 1)
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
ylim(.80, 1)
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
coord_flip()
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
coord_flip() + xlim(.75,1)
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
coord_flip() + xlim(.75,1)
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
coord_flip() + xlim(.75,1)
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) + xlim(0.75,1) +
coord_flip()
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) + xlim(1/2,1) +
coord_flip()
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
coord_flip()
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
coord_flip() +
xlim(15, 20)
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
coord_flip() +
xlim(0.75, 1.0)
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
coord_flip()
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
#coord_flip()
SPplot <- cutDownSP > gather(key, value, -Player)
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
#coord_flip()
SPplot <- cutDownSP > gather(key, value, -Player)
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
#coord_flip()
SPplot <- cutDownSP > gather(key, value, -Player)
cutDownSP <- subset(cutDownData, select=c("Player", "JS", "SvP.x", "SvP.y"))
cutDownSP$Player <- sub(".*? (.+)", "\\1", cutDownSP$Player)
cutDownSP.long<-melt(cutDownSP)
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
cutDownSP <- subset(cutDownData, select=c("Player", "JS", "SvP.x", "SvP.y"))
cutDownSP$Player <- sub(".*? (.+)", "\\1", cutDownSP$Player)
cutDownSP.long<-melt(cutDownSP)
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0))
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
ylim(0.5,1)
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0))
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0))
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
scale_y_continuous(expand = c(0, 0))
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0))
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0))
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
limits = c(0.75,1 ))
ggplot(cutDownSP.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
limits = c(0.75,1 )
cutDown <- subset(cutDownData, select=c("Player", "SMMS", "JSMS"))
cutDown$Player <- sub(".*? (.+)", "\\1", cutDown$Player)
cutDown.long<-melt(cutDown)
ggplot(cutDown.long,aes(Player,value,fill=variable))+
geom_bar(stat="identity",position="dodge") +
theme(axis.text.x=element_text(angle = -55, hjust = 0)) +
scale_fill_manual(values=c("#E69F00", "#56B4E9"))
meanSq(cutDownData$SvP.x, cutDownData$SvP.y) ## total MLE MSE
meanSq(cutDownData$JS, cutDownData$SvP.y) ## total JS MSE
meanSq(p.bar, cutDownData$SvP.y)
