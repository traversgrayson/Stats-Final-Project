setwd("~/Github/Stats-Final-Project")
splitStats <- read.csv("GoalieSplit.csv")
seasonStats <- read.csv("GoalieSeason.csv")
gameStats <- read.csv("GamebyGame.csv")
subSplit <- subset(splitStats, SA >= 150)
subSplisubSplit <- subset(subSplit, SA <= 350)
seasonSplit <- subset(seasonStats, GP >= 50)
mergedData <- merge(subSplit,seasonSplit, by = "Player")
# t <- merge(What, gameStats, by = "Player")
cutDownData <- subset(mergedData, select=c("Player", "GA.x", "SA.x", "GA.y", "SA.y", "Sv..x", "Sv..y"))
k <- nrow(cutDownData)
p.bar <- 1 - mean(cutDownData$GA.x)/mean(cutDownData$SA.x)
p.bar
p.hat <- cutDownData$Sv..x/100
p.hat
ss.p.bar <- sum((p.hat - p.bar)^2)
ss.p.bar
sig.squared <- p.bar*(1 - p.bar)/cutDownData$SA.x
sig.squared
c <- 1 - (k-3)*(p.bar*(1 - p.bar)/cutDownData$SA.x)/sum((p.hat - p.bar)^2)
c
cutDownData$JS <- p.bar + c*(p.hat - p.bar)
RMSE <- function(x, y){sqrt(mean((x-y)^2))}
cutDownData$SvP.x <- cutDownData$Sv..x/100
cutDownData$SvP.y <- cutDownData$Sv..y/100
cutDownData$SMMS <- mapply(RMSE,cutDownData$SvP.x, cutDownData$SvP.y)
cutDownData$JSMS <- mapply(RMSE,cutDownData$JS, cutDownData$SvP.y)
RMSE(cutDownData$SvP.x, cutDownData$SvP.y)
RMSE(cutDownData$JS, cutDownData$SvP.y)
RMSE(p.bar, cutDownData$SvP.y)
counts <- table(cutDownData$JSMS, cutDownData$SMMS)
counts <- counts[!is.na[counts]]
c <- 1 - (k-3)*(p.bar*(1 - p.bar)/cutDownData$SA.x)/sum((p.hat - p.bar)^2)
c
cutDownData$JS <- p.bar + c*(p.hat - p.bar)
RMSE <- function(x, y){sqrt(mean((x-y)^2))}
cutDownData$SvP.x <- cutDownData$Sv..x/100
cutDownData$SvP.y <- cutDownData$Sv..y/100
cutDownData$SMMS <- mapply(RMSE,cutDownData$SvP.x, cutDownData$SvP.y)
cutDownData$JSMS <- mapply(RMSE,cutDownData$JS, cutDownData$SvP.y)
RMSE(cutDownData$SvP.x, cutDownData$SvP.y)
RMSE(cutDownData$JS, cutDownData$SvP.y)
RMSE(p.bar, cutDownData$SvP.y)
counts <- table(cutDownData$JSMS, cutDownData$SMMS)
counts <- counts[!is.na[counts]]
library(ggplot2)
library(reshape2)
p.bar
meanSq <- function(x, y){sqrt(mean((x-y)^2))}
cutDownData$JS <- p.bar + c*(p.hat - p.bar) # create a column for JS estimates
cutDownData$SMMS <- mapply(MeanSq,cutDownData$SvP.x, cutDownData$SvP.y)
cutDownData$JSMS <- mapply(MeanSq,cutDownData$JS, cutDownData$SvP.y)
meanSq(cutDownData$SvP.x, cutDownData$SvP.y)
install.packages("dplyr", "tidyr")
install.packages("dplyr"), "tidyr","ggplot2", "reshape2")
